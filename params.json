{"name":"Emojisaic","tagline":"convert images or animated gifs into 100% emojis","body":"### Emojisaic\r\n\r\nFrom this: \r\n\r\n![original leia image](http://i.imgur.com/iufhydj.png)\r\n\r\nTo this: \r\n\r\n![emojisaic Leia gif](http://i.imgur.com/ZhE4aJQ.png)\r\n\r\n[(full 8mb gif here)](http://i.imgur.com/aTK5mkj.gifv)\r\n\r\nSee a few more examples [(here.)](http://mojigifs.tumblr.com/)\r\n\r\n### How To Use\r\n\r\n* Clone the repo, dude!\r\n* `bundle install`\r\n* `ruby emojisaic.rb -g [filename.gif]` (for a gif)\r\nor \r\n* `ruby emojisaic.rb -i [filename.jpg]` (for a still image) \r\n* Wait. \r\n* Marvel @ your emojisaic!\r\n\r\n## Options\r\n\r\nat least one of these are mandatory: \r\n* `-g [filename]` or `--gif [filename]` - indicate location of the gif to convert\r\n* `-i [filename]` or `--image [filename]` - indicate location of the still image to convert\r\n\r\noptional options: \r\n* `-s [int]` or `--size [int]` - height of the emoji in pixels. default is 8. smaller size = longer conversion time\r\n* `-z [int]` or `--zoom [int]` - multiply output file height and width by this number. default is 1. larger = longer conversion time \r\n* `-o [int]` or `--offset [int]` - randomly move emojis by this many pixels. default is 0. lower numbers are generally better, anything above 10 or so is visual gibberish #FreeOffset\r\n* `-c [int]` or `--coverage [int]` - emojis are scored by their average color. however, some emojis have more pixels filled in and will look better with certain kinds of images. without this option set, the program will replace a given pixel area with the closest emoji by color, regardless of how many non-transparent pixels it contains. setting this to 10, for example, will find the 10 closest emojis by color to a given pixel area and pick the one with the highest percentage of pixel coverage. I recommend setting this to between 10 and 30.\r\n* `-q` or `--quiet` - silences all output and updates to the console\r\n\r\nutilities:\r\n* `-t` or `--tmp` - deletes all temporary images in the tmp/ folder\r\n* `-m` or `--map` - regenerate emoji color map\r\n* `-h` or `--help` - print these options to the console\r\n\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}